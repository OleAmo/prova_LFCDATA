% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lfcLiDAR.R
\name{lidar_clip_and_stats}
\alias{lidar_clip_and_stats}
\title{Clip by polygons and calculate stats from raw raster tables (20x20m)}
\usage{
lidar_clip_and_stats(object, sf, polygon_id_variable, variables)
}
\arguments{
\item{object}{\code{lfcLiDAR} object, as created by \code{\link{lidar}}}

\item{sf}{sf object with the polygon/s to clip}

\item{polygon_id_variable}{character vector of length 1 with the name of the
variable of \code{sf} that contains the polygon identificator (name, code...)}

\item{variables}{character vector with the names of the variables to access}
}
\value{
This function returns the same sf object provided with new columns with the
  mean of each polygon for each variable requested.
}
\description{
\code{lidar_clip_and_stats} is a wrapper for the \code{$clip_and_stats}
  method of \code{lfcLiDAR} objects. See \code{\link{lidar}}.
}
\details{
The stats returned are the following:
\itemize{
  \item{\code{poly_km2}: Area in square kilometers of the polygon supplied}
  \item{\code{pixels}: Pixel count intersecting with the polygon supplied. Only pixels
        with value are counted}
  \item{\code{average}: Average value for the pixels intersecting with the polygon
        supplied}
  \item{\code{min}: Minimum value for the pixels intersecting with the polygon
        supplied}
  \item{\code{max}: Maximum value for the pixels intersecting with the polygon
        supplied}
  \item{\code{sd}: Standard deviation value for the pixels intersecting with the
        polygon supplied}
  \item{\code{km2}: Area covered by the raster intersecting with the polygon supplied}
  \item{\code{km2_perc}: Percentage of the supplied polygon area covered by the raster}
}
}
\examples{
if (interactive()) {
library(dplyr)
lidardb <- lidar()

polygons_data <- lidar_get_data('lidar_provincias', 'DBH') \%>\%
  select(poly_id, DBH_check = DBH_mean, geometry)

dbh_provinces <- lidar_clip_and_stats(lidardb, polygons_data, 'poly_id', 'DBH')
dbh_provinces$DBH_check == dbh_provinces$DBH_mean

# lidardb is an R6 object, so the previous example is the same as:
lidardb$clip_and_stats(polygons_data, 'poly_id', 'DBH')
}

}
\seealso{
Other LiDAR functions: 
\code{\link{lidar_avail_tables}()},
\code{\link{lidar_describe_var}()},
\code{\link{lidar_get_data}()},
\code{\link{lidar_get_lowres_raster}()},
\code{\link{lidar_point_value}()},
\code{\link{lidar}()}
}
\concept{LiDAR functions}
